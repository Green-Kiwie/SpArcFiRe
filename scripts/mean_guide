#!/bin/bash

#usage: mean_guide [-a /path/to/aligned/by/color/galaxies] [-m /path/to/aligned/sumOrMean/of/wavebands] galaxy_number output_directory
# The paths should include ALIGPATH/HASH/GALAXYNUM/galaxyNum_wb.fits and MEANPATH/HASH/galaxyNum-ugriz.fits



USAGE="USAGE: $0 [-a /path/to/aligned/by/color/galaxies] [-m /path/to/aligned/sumOrMean/of/wavebands] galaxy_number output_directory
If -a and -m not specified; we use openlab paths. 
The paths should include ALIGPATH/HASH/GALAXYNUM/galaxyNum_wb.fits for -a and MEANPATH/HASH/galaxyNum-ugriz.fits for -m"
NL='
'
die() { echo "$USAGE${NL}FATAL ERROR: $@" >&2; exit 1;}



ALIGPATH="/extra/wayne1/research/drdavis/SDSS/FITS/2020/SDSS_DR12_Aligned/ByColor"
MEANPATH="/extra/wayne1/research/drdavis/SDSS/FITS/2020/SDSS_DR12_Aligned/AllColorsSummed"



while getopts ":a:m:" opt; do
  case $opt in
    a) ALIGPATH="$OPTARG"
    echo got a option $ALIGPATH
    ;;
    m) MEANPATH="$OPTARG"
    echo got m option $MEANPATH
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    ;;
  esac
done

shift $((OPTIND-1))



TMP=`mktemp -d`
HASH="${1#"${1%???}"}"



if [ ! -d "${ALIGPATH}/${HASH}/$1" ]
then
    die "GALAXY NUMBER DOES NOT EXIST"
fi

if [ ! -d "$2" ]
then
    die "OUTPUT DIRECTORY DOES NOT EXIST"
fi



cp -r ${ALIGPATH}/${HASH}/"$1" $TMP/"$1"


unxz $TMP/"$1"/*
mkdir $TMP/meanFITS/
#/extra/wayne1/preserve/skylarjh/skylars_guided_runs/mean/createMeans $TMP/meanFITS/"$1".fits $TMP/"$1"/"$1"_r.fits $TMP/"$1"/"$1"_g.fits $TMP/"$1"/"$1"_i.fits $TMP/"$1"/"$1"_u.fits $TMP/"$1"/"$1"_z.fits




cp ${MEANPATH}/${HASH}/$1*.fits $TMP/meanFITS/$1.fits



mkdir $TMP/SDSS/
mkdir $TMP/SDSS/G.in
mkdir $TMP/SDSS/G.out
mkdir $TMP/SDSS/G.tmp
mkdir $TMP/guide
cp -r $TMP/meanFITS/"$1".fits $TMP/SDSS/G.in/
/extra/wayne1/preserve/skylarjh/SpArcFiRe/scripts/SpArcFiRe -convert-FITS $TMP/SDSS/G.in $TMP/SDSS/G.tmp $TMP/SDSS/G.out -writeBulgeMask 1
cp -r $TMP/SDSS/G.out $TMP/guide/


mkdir $TMP/elps_dir
cp $TMP/SDSS/G.out/$1/$1-elps-fit-params.txt $TMP/elps_dir/$1_elps.txt


rm -rf $TMP/SDSS/G.in/*


for waveband in $(ls $TMP/"$1" | sed -e 's/\.fits$//')
do
    for threshold in 0 0.25 0.5 0.75 1
    do

        rm -rf $TMP/SDSS/G.tmp/*
        rm -rf $TMP/SDSS/G.in/*
        cp $TMP/"$1"/"$waveband".fits $TMP/SDSS/G.in/"$1".fits
        SpArcFiRe -convert-FITS -elps_dir $TMP/elps_dir -guide_dir $TMP/guide $TMP/SDSS/G.in $TMP/SDSS/G.tmp $TMP/SDSS/G.out -writeBulgeMask 1 -imageGuidingThreshold "$threshold" 
        mkdir -p "$2"/$HASH/"$1"/"$threshold"/"$waveband"
        cp -r $TMP/SDSS/G.out "$2"/"$HASH"/"$1"/"$threshold"/"$waveband"
done
done

rm -rf $TMP
